;;******************************************************************************
;; WARNING: THIS FILE WAS CODE GENERATED. CHANGES MAY BE LOST IF REGENERATED
;;******************************************************************************

import System
import System.Runtime.Serialization

namespace PartsSystem

    .include "PART" repository, structure="strPart", end

    {Serializable}
    public class PartWrapper implements ISerializable

        internal mPart, strPart

        public method PartWrapper
        proc
            init mPart
        endmethod

        public method PartWrapper
            info, @SerializationInfo
            context, StreamingContext
            this()
        proc
            data myType = ^typeof([#]byte)
            mPart = (a)([#]byte)info.GetValue("Record",myType)
        endmethod

        public method GetObjectData, void
            info, @SerializationInfo 
            context, StreamingContext 
        proc
            data bytes, [#]byte, (a)mPart
            info.AddValue("Record",bytes)
        endmethod
        
        public property Record, String
            method get
            proc
                mreturn (String)mPart
            endmethod
            method set
            proc
                mPart = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; part ID (ID, A20)
        ;;; </summary>
        public property Id, String
            method get
            proc
                mreturn %atrim(mPart.id)
            endmethod
            method set
            proc
                mPart.id = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; Group ID (GROUPID, A20)
        ;;; </summary>
        public property Groupid, String
            method get
            proc
                mreturn %atrim(mPart.groupid)
            endmethod
            method set
            proc
                mPart.groupid = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; supplier id (SUPPLIERID, A20)
        ;;; </summary>
        public property Supplierid, String
            method get
            proc
                mreturn %atrim(mPart.supplierid)
            endmethod
            method set
            proc
                mPart.supplierid = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; Description (DESCRIPTION, A50)
        ;;; </summary>
        public property Description, String
            method get
            proc
                mreturn %atrim(mPart.description)
            endmethod
            method set
            proc
                mPart.description = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; Technical info (TECHNICAL_INFO, A500)
        ;;; </summary>
        public property TechnicalInfo, String
            method get
            proc
                mreturn %atrim(mPart.technical_info)
            endmethod
            method set
            proc
                mPart.technical_info = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; quantity in stock (QUANTITY, I4)
        ;;; </summary>
        public property Quantity, int
            method get
            proc
                mreturn mPart.quantity
            endmethod
            method set
            proc
                mPart.quantity = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; cost price (COST_PRICE, D10.2)
        ;;; </summary>
        public property CostPrice, decimal
            method get
            proc
                mreturn mPart.cost_price
            endmethod
            method set
            proc
                mPart.cost_price = value
            endmethod
        endproperty

        ;;; <summary>
        ;;;  (SPARE, A76)
        ;;; </summary>
        public property Spare, String
            method get
            proc
                mreturn %atrim(mPart.spare)
            endmethod
            method set
            proc
                mPart.spare = value
            endmethod
        endproperty

    endclass

endnamespace
